--------------------------------------------------
---------- A quick guide to use BTD6bot ----------
--------------------------------------------------

-this program is roughly divided into 2 parts: graphical user interface (gui) and bot itself
=> this guide addresses the gui part and requires minimal technical knowledge
-it does not address following points
 >installing (Python, packages)
 >how to make custom plans
 >how to update bot for future versions (add monkeys/heroes and any commands for them, other significant changes in ui)

== For general guide/readme, see https://github.com/j-miet/BTD6bot or README.md file in project root folder ==


[First-time setup]
-set your in-game language to English
-click 'Set hotkeys' button and set these to match your in-game hotkeys
-click 'Settings' button
 1. make sure current resolution matches your game resolution; enable windowed mode if necessary. For windowed, 
    remember to start your Btd6 game with -popupwindow lauch flag, otherwise the game window has a extra border located 
    at the top which interferes with how bot is programmed.
  --If you have steam version, you set this with going to steam library -> right-click Bloons TD 6 -> launch options and
    type -popupwindow in the text box.
 2. set game version to same value as current major Btd6 game version e.g. if version 48.1/48.2, use 48.
 3. (recommended) toggle on 'Update esc menu settings automatically' so you don't have to set in-game esc menu setting 
    manually
 4. (VERY IMPORTANT!) adjust ocr for your current resolution settings by enabling 'Auto-adjust ocr upgrade data the 
    next time a plan is run'.
        Now, the argument entry field below this toggle button should include
        1. res='your resolution' e.g. res=1920x1080,
        2. win=1, if you enabled windowed mode, and win=0 if not,
        3. monkeys=all, to update delta values for all monkeys,
        4. delta=4, this is for adjusting each individual delta value by 0.01*delta = 0.04. It gives room for error 
           when bot uses ocr for detecting upgrade names.
        >Example of full argument string: res=1920x1080 win=0 monkeys=all delta=4
        --> You can also refresh current args entry text with 'Reset args' button. This should update resolution and 
       windowed status arguments.
   Then, just press the 'Set args' button: this updates args string to a setting file where it can read by bot 
   afterwards. Now, the next time you run any plan, an adjusting process will take its place.
-now, close other windows except main window, click 'Initialize bot' button, wait until it says 'Open bot window' then
 press again.
-now make sure you've done everything above AND verify your resolution has ~16:9 aspect ratio. Btd6 adds extra borders 
 and/or moves certain text location around if resolution has different aspect ratio; this will interfere with text 
 reading from the screen and is likely to break the bot.
-have your Btd6 game be opened on your main monitor, then press 'Run' or use your start-stop hotkey.
-Bot should now look and detect your Btd6 screen and automatically enter the 'spa pits' map in sandbox mode. Then, you  
 just wait until it has finished adjusting ocr values. This process takes at least 10 minutes.
-After adjusting is done, your bot should be ready to run any existing plan file!


[How to run]
#if you have to change your resolution settings, always check back to [First-time setup] and run the ocr adjusting 
 again. It might now be required always, but can cause issues with text detection, even with minimal resolution changes.
-just select any map and strategy, toggle any modifiers (event/queue/replay) on
  >if you enabled queue mode, click 'Queue mode maplist' button and add any plans there. Order of plans is top to 
   bottom.
-(optional) 
    1. If you'd wish to record round times, open 'Settings' and toggle 'Record round times and update plan 
       version'; probably unnecessary unless you're running a new, self-made plan and need time & version data to be 
       saved.
    2. Change 'Retries' value if you want the bot to retry same plan again in case it fails. This is very useful for 
       getting black borders: on harder expert maps, bot might fail due to some rng. Normally with retries value 1, it 
       will skip over the plan and move on, but if you set retries to, say 5, it will try up to 5 times before giving 
       up BUT immediatelly moves on if succesful, ignoring the remaining retries.
-then just 'Initialize bot' -> 'Open bot window' and run the bot.

---for quality of life, remember to also set your gui hotkeys under 'Set hotkeys'---
=>when bot is running, avoid using mouse or keyboard. Pause the bot first by pressing your 'pause' hotkey.
  -to resume the bot, don't press the game window itself or it will close the esc menu. Instead, keep the game open on 
   main monitor and just press 'pause' hotkey again you wish to resume: esc menu is closed automatically!
=>to halt the current bot loop, press your 'start-stop' hotkey: note that this resets current plan to start, and if you 
  have queue mode enabled, entire queue back to first plan.
=>finally, if you need to close the entire program i.e. all its windows and bot itself, instantly, press your 'exit' 
  hotkey.



[Gui windows guide]

<Main Window>
-Responsible for running the program: if closed, entire program closes.
-Includes buttons for other windows (Help, Settings, Hotkeys, Queue, Monitoring)
-Includes drop-down lists of all maps and their respective available strategies. Displays info text for current plan
 i.e. selected map + strategy combination.
-Has toggle buttons for
 --collection event mode: this will check if pop-up window appears after a plan is finished and collects collection 
   rewards,
 --queue mode: loads all listed plans from queue mode maplist and plays them one after another.
 --replay mode: replays current plan or queue of plans until bot is manually stopped.
 >all of these modes work with one another so you can mix them, or have all disabled/enabled. 
-'Show plot' button opens a new process window which displays saved time and round data for currently selected plan.
-(Optional) If you have saved map images in 'Files/map images' folder and they 
 1. follow the correct naming format (all lowercase, spaces included, special symbols like # in #ouch removed),
 2. arescaled to 320x195 resolution,
  then they will be displayed in place of ascii art.

<Hotkey Window>
-Is used for updating bot hotkeys.
 >hotkey panel is divided into two parts: 
  --upper part is for in-game hotkeys, which must match with Btd6 in-game hotkeys
  --lower part is for gui hotkeys. These work either always (exit) or when a monitoring window exist (pause, start-stop)
-Also includes instruction window
-To update a key, 
  --simply press any line on hotkeys panel,
  --press 'Set hotkey' button, then press any supported keyboard key
  --value for that line should now display the updated value on the right of '=' sign.
 >note that some symbols might show up weirdly, but should still work nontheless.

<Queue Window>
-Shows all existing plans and currently selected plan queue. When a plan is selected, its info panel is also displayed.
-You can use the 'Add' and 'Remove' buttons to add new/remove existing plan in queue. They also support hotkeys: 'a' 
 for add, 'r' for remove.
-When queue mode is toggled on, bot will use this plan queue instead of currently selected plan from main window.

<Help Window>
-Displays this text, does nothing else.

<Settings Window>
-Includes basic and advanced settings. Advanced settings are mostly for internal testing, except the auto-adjust option 
 which was already used in [First-time setup].
=Explanations=
(Basic):
--Enable custom resolution: 
    Change resolution the bot uses to determine relative mouse clicking/ocr text locations. Must match with used 
    in-game resolution which should approximately have 16:9 aspect ratio.
--Windowed mode: 
    If Btd6 is run in windowed mode. Btd6 must be launced with -popupwindow lauch option and window cannot be moved 
    from its initial position.
--Game version: 
    Current major game patch version. If version is 48, 48.1, 48.2 etc. just use 48. This value is used to update plan 
    info for any plan and verify it works on current version.
--Retries: 
    How many times the bot will retry current plan before moving on to next one. However, if bot finishes before 
    reaching this limit, it behaves as usual and moves onto next plan, if queue mode enabled, or finishes.
--Update esc menu settings automatically:
    When bot enters a map first time in current session, it will automatically verify all required in-game menu 
    settings are enabled. These are: drag & drop, disable nudge mode, auto start.
--Record round times and update plan version: 
    Record all round times during plan execution and updates them in time_data.json. Current version value is also 
    stored. Data is only saved if plan finishes and bot returns to menu normally by finding the victory screen. Time 
    data is used under 'Show Plot' whereas version is used in plan info panel as a confirmation that this plan can be 
    finished on current game version.

(Advanced):
--Ocr time limit: How long will bot attempt to search for various text flags before it gives up and attempts to return 
    to main menu. Typically, this should never occur so a high value of 300 seconds or more is recommended: this is 
    especially important for apopalypse plans, as in those you can have long periods of downtime where bot attemps to 
    place/upgrade a monkey.
--Ocr frequency: Pause interval between most ocr operations, in seconds. Naturally, every operation has base cost which 
    depends on cpu speed on which this value is then added. Raising this value will greatly decrease cpu load, but makes
    ocr more inaccurate/slow. For normal use, keep this value around 0.01-0.1. For extended, repeating but simple 
    processes, like farming xp/monkey money with simple strategies such dark castle easy/deflation - for hours - you 
    could set this value to even high as 0.5-1.
--Print ocr (delta | substring) text values in monitoring window: Enables text printing for ocr processes which use 
    delta matching | substring matching. For example, monkey placements and upgrades use delta matching whereas finding 
    current round number uses substring matching.
--Auto-adjust ocr upgrade data the next time a plan is run: Updates all upgrade ocr values based on current resolution 
    settings. As bot uses upgrade labels to determine whether is has succesfully upgraded a monkey or has to keep on 
    trying, these texts must be as precisely readable as possible. For upgrades, bot has three cases:
     >not mixing and accepting similar strings like 'sharp shots' & 'razor sharp shots',
     >not accept too weak a string
     >accept strings that are good enough.
    To ensure these all work in harmony, bot uses three identifiers: 
     >monkey name with upgrade path e.g. dart x-2-x
     >static string it matches to e.g. 'very quick shots'
     >a delta value of how much the output needs to match with static string. So 0.8 means 80% of static string's 
      symbols must be found in ocr output string, in similar order.
    Now, each upgrade path has *individual* delta value which should be high enough to ignore false strings, but still 
    accept string that is close enough, even if some further error is included. For this reason, this operation 
    performs check for all upgrades, updates the delta value and then subtracts a external delta value to make room for 
    error. The value is passed as integer 0-9 and it means it will simply subtract 0.01-0.09 from ALL DELTAS.
    ->one more thing: when bot performs the adjusting process, it will do it twice, first for monkeys placed on the 
        left side (which opens upgrade panel on right), then on right (which opens panel on left). Then, it will use 
        the lower value of the two and after this, does the previously mentioned subtraction process. This is important 
        as upgrade panels of different sides can give quite different results so lower one is used as baseline.
    
<Monitoring Window>
-Sets the bot up with current setting, modes and hotkeys. And if queue mode is on, also with plan queue.
 >most settings (like resolution) and hotkey values, are updated immediately to current monitoring window. But any 
  toggleable modes and current map+strat/queue maplist, will only get updated after you close and reopen this window.
 >if you want to be 100% sure, just close and reopen the window any time you change any settings.
-Has a output window where all printed text is redirected during bot runtime.
-Displays current, and if queue mode is on, next plan in queue. Also displays any toggled modes as On/Off.
-Displays current round's timer; not 100% accurate, but still quite good.
-Bot can be started/stopped with 'Run'/'Stop' button, or using the 'start-stop' hotkey you set under hotkeys window.
-(Optional) Just like with main window, if you have saved map images in 'Files/map images' folder and they 
 1. follow the correct naming format (all lowercase, spaces included, special symbols like # in #ouch removed),
 2. are scaled to 320x195 resolution,
  then they will be displayed in place of ascii art.